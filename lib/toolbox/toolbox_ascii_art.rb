# frozen_string_literal: true

require 'colorize'
require 'tty-box'
require_relative 'toolbox'

# This class when called is passed a title and it shows the menu title for that tile
class ToolboxAsciiArt < Toolbox # rubocop:disable Metrics/ClassLength
  def initialize(title) # rubocop:disable Metrics/MethodLength
    @title_hash = {
      'title' => '
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡠⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠟⠃⠀⠀⠙⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠋⠀⠀⠀⠀⠀⠀⠘⣆⠀⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠾⢛⠒⠀⠀⠀⠀⠀⠀⠀⢸⡆⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣶⣄⡈⠓⢄⠠⡀⠀⠀⠀⣄⣷⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣷⠀⠈⠱⡄⠑⣌⠆⠀⠀⡜⢻⠀⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡿⠳⡆⠐⢿⣆⠈⢿⠀⠀⡇⠘⡆⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣷⡇⠀⠀⠈⢆⠈⠆⢸⠀⠀⢣⠀⠀⠀⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣧⠀⠀⠈⢂⠀⡇⠀⠀⢨⠓⣄⠀⠀⠀⠀
 ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣦⣤⠖⡏⡸⠀⣀⡴⠋⠀⠈⠢⡀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⠁⣹⣿⣿⣿⣷⣾⠽⠖⠊⢹⣀⠄⠀⠀⠀⠈⢣⡀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡟⣇⣰⢫⢻⢉⠉⠀⣿⡆⠀⠀⡸⡏⠀⠀⠀⠀⠀⠀⢇
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⡇⡇⠈⢸⢸⢸⠀⠀⡇⡇⠀⠀⠁⠻⡄⡠⠂⠀⠀⠀⠘
  ⢤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠛⠓⡇⠀⠸⡆⢸⠀⢠⣿⠀⠀⠀⠀⣰⣿⣵⡆⠀⠀⠀⠀
  ⠈⢻⣷⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡿⣦⣀⡇⠀⢧⡇⠀⠀⢺⡟⠀⠀⠀⢰⠉⣰⠟⠊⣠⠂⠀⡸
  ⠀⠀⢻⣿⣿⣷⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⢧⡙⠺⠿⡇⠀⠘⠇⠀⠀⢸⣧⠀⠀⢠⠃⣾⣌⠉⠩⠭⠍⣉⡇
  ⠀⠀⠀⠻⣿⣿⣿⣿⣿⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣞⣋⠀⠈⠀⡳⣧⠀⠀⠀⠀⠀⢸⡏⠀⠀⡞⢰⠉⠉⠉⠉⠉⠓⢻⠃
  ⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣷⡄⠀⠀⢀⣀⠠⠤⣤⣤⠤⠞⠓⢠⠈⡆⠀⢣⣸⣾⠆⠀⠀⠀⠀⠀⢀⣀⡼⠁⡿⠈⣉⣉⣒⡒⠢⡼⠀
  ⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣎⣽⣶⣤⡶⢋⣤⠃⣠⡦⢀⡼⢦⣾⡤⠚⣟⣁⣀⣀⣀⣀⠀⣀⣈⣀⣠⣾⣅⠀⠑⠂⠤⠌⣩⡇⠀
  ⠀⠀⠀⠀⠀⠀⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡁⣺⢁⣞⣉⡴⠟⡀⠀⠀⠀⠁⠸⡅⠀⠈⢷⠈⠏⠙⠀⢹⡛⠀⢉⠀⠀⠀⣀⣀⣼⡇⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⡟⢡⠖⣡⡴⠂⣀⣀⣀⣰⣁⣀⣀⣸⠀⠀⠀⠀⠈⠁⠀⠀⠈⠀⣠⠜⠋⣠⠁⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣿⣿⡟⢿⣿⣿⣷⡟⢋⣥⣖⣉⠀⠈⢁⡀⠤⠚⠿⣷⡦⢀⣠⣀⠢⣄⣀⡠⠔⠋⠁⠀⣼⠃⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⡄⠈⠻⣿⣿⢿⣛⣩⠤⠒⠉⠁⠀⠀⠀⠀⠀⠉⠒⢤⡀⠉⠁⠀⠀⠀⠀⠀⢀⡿⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⣤⣤⠴⠟⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠤⠀⠀⠀⠀⠀⢩⠇⠀⠀⠀
  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀',
      'open_source_intelligence' => '   ____                       _____
  / __ \____  ___  ____      / ___/____  __  _______________
 / / / / __ \/ _ \/ __ \     \__ \/ __ \/ / / / ___/ ___/ _ \
/ /_/ / /_/ /  __/ / / /    ___/ / /_/ / /_/ / /  / /__/  __/
\____/ .___/\___/_/ /_/    /____/\____/\__,_/_/   \___/\___/
    /_/
    ____      __       _____
   /  _/___  / /____  / / (_)___ ____  ____  ________
   / // __ \/ __/ _ \/ / / / __ `/ _ \/ __ \/ ___/ _ \
 _/ // / / / /_/  __/ / / / /_/ /  __/ / / / /__/  __/
/___/_/ /_/\__/\___/_/_/_/\__, /\___/_/ /_/\___/\___/
                         /____/                              ',
      'cryptography' => '   ______                 __                               __
  / ____/______  ______  / /_____  ____ __________ _____  / /_  __  __
 / /   / ___/ / / / __ \/ __/ __ \/ __ `/ ___/ __ `/ __ \/ __ \/ / / /
/ /___/ /  / /_/ / /_/ / /_/ /_/ / /_/ / /  / /_/ / /_/ / / / / /_/ /
\____/_/   \__, / .___/\__/\____/\__, /_/   \__,_/ .___/_/ /_/\__, /
          /____/_/              /____/          /_/          /____/   ',
      'password_cracking' => '    ____                                          __
   / __ \____ ____________      ______  _________/ /
  / /_/ / __ `/ ___/ ___/ | /| / / __ \/ ___/ __  /
 / ____/ /_/ (__  |__  )| |/ |/ / /_/ / /  / /_/ /
/_/    \__,_/____/____/ |__/|__/\____/_/   \__,_/
   ______                __   _
  / ____/________ ______/ /__(_)___  ____ _
 / /   / ___/ __ `/ ___/ //_/ / __ \/ __ `/
/ /___/ /  / /_/ / /__/ ,< / / / / / /_/ /
\____/_/   \__,_/\___/_/|_/_/_/ /_/\__, /
                                  /____/            ',
      'forensics' => '    ______                           _
   / ____/___  ________  ____  _____(_)_________
  / /_  / __ \/ ___/ _ \/ __ \/ ___/ / ___/ ___/
 / __/ / /_/ / /  /  __/ / / (__  ) / /__(__  )
/_/    \____/_/   \___/_/ /_/____/_/\___/____/  ',
      'log_analysis' => '    __                    ___                __           _
   / /   ____  ____ _    /   |  ____  ____ _/ /_  _______(_)____
  / /   / __ \/ __ `/   / /| | / __ \/ __ `/ / / / / ___/ / ___/
 / /___/ /_/ / /_/ /   / ___ |/ / / / /_/ / / /_/ (__  ) (__  )
/_____/\____/\__, /   /_/  |_/_/ /_/\__,_/_/\__, /____/_/____/
            /____/                         /____/               ',
      'network_traffic_analysis' => '    _   __     __                      __
   / | / /__  / /__      ______  _____/ /__
  /  |/ / _ \/ __/ | /| / / __ \/ ___/ //_/
 / /|  /  __/ /_ | |/ |/ / /_/ / /  / ,<
/_/ |_/\___/\__/ |__/|__/\____/_/  /_/|_|
  ______           _________          ___                __           _
 /_  __/________ _/ __/ __(_)____    /   |  ____  ____ _/ /_  _______(_)____
  / / / ___/ __ `/ /_/ /_/ / ___/   / /| | / __ \/ __ `/ / / / / ___/ / ___/
 / / / /  / /_/ / __/ __/ / /__    / ___ |/ / / / /_/ / / /_/ (__  ) (__  )
/_/ /_/   \__,_/_/ /_/ /_/\___/   /_/  |_/_/ /_/\__,_/_/\__, /____/_/____/
                                                       /____/               ',
      'scanning_and_reconnaissance' => '   _____                        _                ___
  / ___/_________ _____  ____  (_)___  ____ _   ( _ )
  \__ \/ ___/ __ `/ __ \/ __ \/ / __ \/ __ `/  / __ \/|
 ___/ / /__/ /_/ / / / / / / / / / / / /_/ /  / /_/  <
/____/\___/\__,_/_/ /_/_/ /_/_/_/ /_/\__, /   \____/\/
    ____                            /____/  _
   / __ \___  _________  ____  ____  ____ _(_)_____________ _____  ________
  / /_/ / _ \/ ___/ __ \/ __ \/ __ \/ __ `/ / ___/ ___/ __ `/ __ \/ ___/ _ \
 / _, _/  __/ /__/ /_/ / / / / / / / /_/ / (__  |__  ) /_/ / / / / /__/  __/
/_/ |_|\___/\___/\____/_/ /_/_/ /_/\__,_/_/____/____/\__,_/_/ /_/\___/\___/ ',
      'web_application_exploitation' => ' _       __     __
| |     / /__  / /_
| | /| / / _ \/ __ \
| |/ |/ /  __/ /_/ /
|__/|__/\___/_.___/
    ___                ___            __  _
   /   |  ____  ____  / (_)________ _/ /_(_)___  ____
  / /| | / __ \/ __ \/ / / ___/ __ `/ __/ / __ \/ __ \
 / ___ |/ /_/ / /_/ / / / /__/ /_/ / /_/ / /_/ / / / /
/_/  |_/ .___/ .___/_/_/\___/\__,_/\__/_/\____/_/ /_/
      /_/   /_/
    ______           __      _ __        __  _
   / ____/  ______  / /___  (_) /_____ _/ /_(_)___  ____
  / __/ | |/_/ __ \/ / __ \/ / __/ __ `/ __/ / __ \/ __ \
 / /____>  </ /_/ / / /_/ / / /_/ /_/ / /_/ / /_/ / / / /
/_____/_/|_/ .___/_/\____/_/\__/\__,_/\__/_/\____/_/ /_/
          /_/                                            ',
      'wireless_access_exploitation' => ' _       ___           __                   ___
| |     / (_)_______  / /__  __________    /   | _____________  __________
| | /| / / / ___/ _ \/ / _ \/ ___/ ___/   / /| |/ ___/ ___/ _ \/ ___/ ___/
| |/ |/ / / /  /  __/ /  __(__  |__  )   / ___ / /__/ /__/  __(__  |__  )
|__/|__/_/_/   \___/_/\___/____/____/   /_/  |_\___/\___/\___/____/____/
    ______           __      _ __        __  _
   / ____/  ______  / /___  (_) /_____ _/ /_(_)___  ____
  / __/ | |/_/ __ \/ / __ \/ / __/ __ `/ __/ / __ \/ __ \
 / /____>  </ /_/ / / /_/ / / /_/ /_/ / /_/ / /_/ / / / /
/_____/_/|_/ .___/_/\____/_/\__/\__,_/\__/_/\____/_/ /_/
          /_/                                                             ',
      'enumeration_and_exploitation' => '    ______                                      __  _
   / ____/___  __  ______ ___  ___  _________ _/ /_(_)___  ____
  / __/ / __ \/ / / / __ `__ \/ _ \/ ___/ __ `/ __/ / __ \/ __ \
 / /___/ / / / /_/ / / / / / /  __/ /  / /_/ / /_/ / /_/ / / / /
/_____/_/ /_/\__,_/_/ /_/ /_/\___/_/   \__,_/\__/_/\____/_/ /_/
   ___          ______           __      _ __        __  _
  ( _ )        / ____/  ______  / /___  (_) /_____ _/ /_(_)___  ____
 / __ \/|     / __/ | |/_/ __ \/ / __ \/ / __/ __ `/ __/ / __ \/ __ \
/ /_/  <     / /____>  </ /_/ / / /_/ / / /_/ /_/ / /_/ / /_/ / / / /
\____/\/    /_____/_/|_/ .___/_/\____/_/\__/\__,_/\__/_/\____/_/ /_/
                      /_/                                            '

    }
    show_title(title)
  end

  def show_title(title)
    clear_terminal
    colored_title = @title_hash[title].lines.map { |line| line.colorize(:red) }.join
    puts TTY::Box.frame(colored_title,
                        title: { top_left: ' RVC Hacking Toolbox '.colorize(:green),
                                 bottom_right: Toolbox.version.colorize(:green) },
                        enable_color: true,
                        style: { border: {
                          fg: :red
                        } })
  end
end
