# frozen_string_literal: true

require 'open-uri'
require 'tty-prompt'
require_relative 'comprehensive_scan'
require_relative 'web_application_exploitation_ascii_art'

# This class display the menu and houses the funtions for the robots.txt scan
# The website scan scans a website for its robots.txt page
class RobotsScan < ComprehensiveScan
  def initialize(solo, *url)
    WebApplicationExploitationAsciiArt.new('robots')
    @url = if solo == true
             obtain_url
           else
             url
           end
    select_robots_mode
  end

  def select_robots_mode # rubocop:disable Metrics/MethodLength
    prompt = TTY::Prompt.new

    choices = [
      { name: 'Scan for robots.txt', value: 1 },
      { name: 'Go to previosu menu', value: 'previous' },
      { name: 'Go to Main Menu', value: 'main' },
      { name: 'Quit application', value: 'quit' }
    ]

    mode = prompt.select('Please select your mode', choices, per_page: 4, cycle: true)

    case mode
    when 1
      WebApplicationExploitationAsciiArt.new('robots')
      fetch_robots_txt
    when 'previous'
      WebApplicationExploitation.new
    when 'main'
      Toolbox.new
    when 'quit'
      clear_terminal
      exit
    end
  end

  def fetch_robots_txt
    robots_url = URI.join(@url, '/robots.txt').to_s
    begin
      robots_content = URI.open(robots_url).read
      puts "Contents of robots.txt for #{@url}:"
      puts robots_content
    rescue OpenURI::HTTPError => e
      puts "Failed to fetch robots.txt: #{e.message}"
    end
  end
end
