# frozen_string_literal: true

require 'colorize'
require 'net/http'
require 'open-uri'
require 'tty-prompt'
require_relative '../toolbox/toolbox'
require_relative '../toolbox/toolbox_ascii_art'

# houses the web application exploitation functions
class WebApplicationExploitation < Toolbox
  def initialize
    ToolboxAsciiArt.new('web_application_exploitation')
    select_mode
  end

  def select_mode
    prompt = TTY::Prompt.new

    choices = [
      { name: 'Scan Website', value: lambda {
        require_relative 'comprehensive_scan/comprehensive_scan'
        ComprehensiveScan.new
      } },
      { name: 'Go to Main Menu', value: -> { Toolbox.new } },
      { name: 'Quit Program', value: -> { clear_terminal && exit } }
    ]

    prompt.select('Please select your mode', choices, per_page: 6, cycle: true)
  end

  def obtain_url
    puts 'Please enter the url you wish to audit'
    url = gets.chomp
    sanitize_url(url)
  end

  def sanitize_url(url)
    uri = URI.parse(url)
    response = Net::HTTP.get_response(uri)
    return url if response.is_a?(Net::HTTPSuccess)

    puts "Failed to fetch content from #{url}"
    obtain_url
  rescue StandardError => e
    puts "An error occurred: #{e.message}"
    obtain_url
  end
end
