# frozen_string_literal: true

require 'colorize'
require 'net/http'
require 'open-uri'
require 'tty-prompt'
require_relative '../toolbox/toolbox'
require_relative '../toolbox/toolbox_ascii_art'

# houses the web application exploitation functions
class WebApplicationExploitation < Toolbox
  def initialize
    clear_terminal
    show_web_application_exploitation
    select_mode
  end

  def select_mode # rubocop:disable Metrics/MethodLength
    prompt = TTY::Prompt.new

    choices = [
      { name: 'Comprehensive scan', value: 1, disabled: 'In development' },
      { name: 'robots.txt scan', value: 2 },
      { name: 'General scan', value: 3, disabled: 'In development' },
      { name: 'SQL injection scan', value: 4, disabled: 'In development' },
      { name: 'Go to Main Menu', value: 'main' },
      { name: 'Quit Program', value: 'quit' }
    ]

    mode = prompt.select('Please select your mode', choices, per_page: 6, cycle: true)

    case mode
    when 1
      require_relative 'comprehensive_scan'
      ComprehensiveScan.new
    when 2
      require_relative 'robots_scan'
      RobotsScan.new(false)
    when 3
      require_relative 'website_scan'
      WebsiteScan.new(false)
    when 4
      require_relative 'sql_scan'
      SQLScan.new(false)
    when 'main'
      Toolbox.new
    when 'quit'
      clear_terminal
      exit
    end
  end

  def obtain_url
    puts 'Please enter the url you wish to audit'
    url = gets.chomp
    sanitize_url(url)
  end

  def sanitize_url(url)
    uri = URI.parse(url)
    response = Net::HTTP.get_response(uri)
    return url if response.is_a?(Net::HTTPSuccess)

    puts "Failed to fetch content from #{url}"
    obtain_url
  rescue StandardError => e
    puts "An error occurred: #{e.message}"
    obtain_url
  end
end
