# frozen_string_literal: true

require_relative 'cryptography'

# This class houses the asciii art and displays it for the cryptography methods
class CryptographyAsciiArt < Cryptography # rubocop:disable Metrics/ClassLength
  def initialize(subtitle) # rubocop:disable Metrics/MethodLength
    @subtitle_hash = {
      'a1z26' => "/==================================\\
||    ___   ________  ___   _____ ||
||   /   | <  /__  / |__ \\ / ___/ ||
||  / /| | / /  / /  __/ // __ \\  ||
|| / ___ |/ /  / /__/ __// /_/ /  ||
||/_/  |_/_/  /____/____/\\____/   ||
\\==================================/",

      'atbash' => "/======================================\\
||    ___   __  __               __   ||
||   /   | / /_/ /_  ____ ______/ /_  ||
||  / /| |/ __/ __ \\/ __ `/ ___/ __ \\ ||
|| / ___ / /_/ /_/ / /_/ (__  ) / / / ||
||/_/  |_\\__/_.___/\\__,_/____/_/ /_/  ||
\\======================================/",
      'base32' => "/==========================================\\
||    ____                      ________  ||
||   / __ )____ _________      |__  /__ \\ ||
||  / __  / __ `/ ___/ _ \\      /_ <__/ / ||
|| / /_/ / /_/ (__  )  __/    ___/ / __/  ||
||/_____/\\__,_/____/\\___/    /____/____/  ||
\\==========================================/",
      'base64' => "/============================================\\
||    ____                      _____ __ __ ||
||   / __ )____ _________      / ___// // / ||
||  / __  / __ `/ ___/ _ \\    / __ \\/ // /_ ||
|| / /_/ / /_/ (__  )  __/   / /_/ /__  __/ ||
||/_____/\\__,_/____/\\___/    \\____/  /_/    ||
\\============================================/",
      'binary' => "/====================================\\
||    ____  _                       ||
||   / __ )(_)___  ____ ________  __||
||  / __  / / __ \\/ __ `/ ___/ / / /||
|| / /_/ / / / / / /_/ / /  / /_/ / ||
||/_____/_/_/ /_/\\__,_/_/   \\__, /  ||
||                         /____/   ||
\\====================================/",
      'caesar' => "/======================================\\
||   ______                           ||
||  / ____/___ ____  _________ ______ ||
|| / /   / __ `/ _ \\/ ___/ __ `/ ___/ ||
||/ /___/ /_/ /  __(__  ) /_/ / /     ||
||\\____/\\__,_/\\___/____/\\__,_/_/      ||
\\======================================/",
      'decimal' => "/==========================================\\
||    ____            _                 __||
||   / __ \\___  _____(_)___ ___  ____ _/ /||
||  / / / / _ \\/ ___/ / __ `__ \\/ __ `/ / ||
|| / /_/ /  __/ /__/ / / / / / / /_/ / /  ||
||/_____/\\___/\\___/_/_/ /_/ /_/\\__,_/_/   ||
\\==========================================/",
      'hexadecimal' => "/================================================================\\
||    __  __                    __          _                 __||
||   / / / /__  _  ______ _____/ /__  _____(_)___ ___  ____ _/ /||
||  / /_/ / _ \\| |/_/ __ `/ __  / _ \\/ ___/ / __ `__ \\/ __ `/ / ||
|| / __  /  __/>  </ /_/ / /_/ /  __/ /__/ / / / / / / /_/ / /  ||
||/_/ /_/\\___/_/|_|\\__,_/\\__,_/\\___/\\___/_/_/ /_/ /_/\\__,_/_/   ||
\\================================================================/",
      'morse' => "/================================\\
||    __  ___                   ||
||   /  |/  /___  _____________ ||
||  / /|_/ / __ \\/ ___/ ___/ _ \\||
|| / /  / / /_/ / /  (__  )  __/||
||/_/  /_/\\____/_/  /____/\\___/ ||
\\================================/",
      'rail_fence' => "/==================================================\\
||    ____        _ __   ______                   ||
||   / __ \\____ _(_) /  / ____/__  ____  ________ ||
||  / /_/ / __ `/ / /  / /_  / _ \\/ __ \\/ ___/ _ \\||
|| / _, _/ /_/ / / /  / __/ /  __/ / / / /__/  __/||
||/_/ |_|\\__,_/_/_/  /_/    \\___/_/ /_/\\___/\\___/ ||
\\==================================================/",
      'rsa' => "/======================\\
||    ____  _____ ___ ||
||   / __ \\/ ___//   |||
||  / /_/ /\\__ \\/ /| |||
|| / _, _/___/ / ___ |||
||/_/ |_|/____/_/  |_|||
\\======================/",
      'sha1' => "/==========================\\
||   _____ __  _____   ___||
||  / ___// / / /   | <  /||
||  \\__ \\/ /_/ / /| | / / ||
|| ___/ / __  / ___ |/ /  ||
||/____/_/ /_/_/  |_/_/   ||
\\==========================/",
      'vigenere' => "/==========================================\\
|| _    ___                  __           ||
||| |  / (_)___ ____  ____  _\\_\\ ________ ||
||| | / / / __ `/ _ \\/ __ \\/ _ \\/ ___/ _ \\||
||| |/ / / /_/ /  __/ / / /  __/ /  /  __/||
|||___/_/\\__, /\\___/_/ /_/\\___/_/   \\___/ ||
||      /____/                            ||
\\==========================================/"
    }
    show_subtitle(subtitle)
  end

  def show_subtitle(subtitle)
    clear_terminal
    show_cryptography
    puts @subtitle_hash[subtitle].colorize(:red)
  end
end
